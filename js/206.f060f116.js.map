{"version":3,"file":"js/206.f060f116.js","mappings":"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CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,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,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,KAAK,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,eAAe,CAAC,EAAE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","sources":["webpack://@coreui/coreui-pro-vue-admin-template/./src/views/apps/saras/Main.vue","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/mdurl/lib/decode.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/mdurl/lib/encode.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/mdurl/lib/format.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/mdurl/lib/parse.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/uc.micro/categories/P/regex.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/uc.micro/categories/S/regex.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/uc.micro/properties/Any/regex.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/uc.micro/categories/Cc/regex.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/uc.micro/categories/Cf/regex.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/uc.micro/categories/Z/regex.mjs","webpack://@coreui/coreui-pro-vue-admin-template/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","webpack://@coreui/coreui-pro-vue-admin-template/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","webpack://@coreui/coreui-pro-vue-admin-template/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","webpack://@coreui/coreui-pro-vue-admin-template/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","webpack://@coreui/coreui-pro-vue-admin-template/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/encode-html.ts","webpack://@coreui/coreui-pro-vue-admin-template/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","webpack://@coreui/coreui-pro-vue-admin-template/https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/index.ts","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/common/utils.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/helpers/parse_link_label.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/helpers/parse_link_destination.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/helpers/parse_link_title.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/renderer.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/ruler.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/token.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_core/state_core.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_core/normalize.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_core/block.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_core/inline.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_core/linkify.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_core/replacements.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_core/smartquotes.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_core/text_join.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/parser_core.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/state_block.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/table.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/code.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/fence.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/blockquote.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/hr.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/list.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/reference.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/common/html_blocks.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/common/html_re.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/html_block.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/heading.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/lheading.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_block/paragraph.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/parser_block.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/state_inline.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/text.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/linkify.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/newline.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/escape.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/backticks.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/strikethrough.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/emphasis.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/link.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/image.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/autolink.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/html_inline.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/entity.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/rules_inline/fragments_join.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/parser_inline.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/linkify-it/lib/re.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/linkify-it/index.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/punycode.js/punycode.es6.js","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/presets/default.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/presets/zero.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/presets/commonmark.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./node_modules/markdown-it/lib/index.mjs","webpack://@coreui/coreui-pro-vue-admin-template/./src/views/apps/saras/Main.vue?a548"],"sourcesContent":["<template>\n  <CRow class=\"mb-3\">\n    <CCol :md=\"12\">\n\n      <CCard class=\"mb-4\">\n        <CCardHeader>\n          <CRow>\n            <CCol :md=\"3\" :sm=\"6\">\n              <!-- <div class=\"row clearfix\">\n                <CCol :md=\"1\" :sm=\"2\">\n                  <CAvatar size=\"md\" :src=\"this.app_avatar\" status=\"success\" />\n                </CCol>\n                <CCol :md=\"6\" :sm=\"6\">\n                  <div>Saras</div>\n                  <div class=\"small text-disabled success text-nowrap\">\n                    <span>Online</span>\n                  </div>\n                </CCol>\n              </div> -->\n\n              <CTable class=\"mb-0\" borderless small pb-0 mb-0>\n                <CTableBody>\n                  <CTableRow>\n                    <CTableDataCell style=\"max-width: 1rem;\">\n                      <CAvatar size=\"md\" :src=\"this.app_avatar\" status=\"success\" />\n                    </CTableDataCell>\n                    <CTableDataCell>\n                      <div>Saras</div>\n                      <div class=\"small text-disabled text-nowrap\">\n                        <span>Online</span>\n                      </div>\n                    </CTableDataCell>\n                  </CTableRow>\n                </CTableBody>\n              </CTable>\n\n            </CCol>\n\n            <!-- <CCol :md=\"6\" :sm=\"6\">\n              <div class=\"d-flex justify-content-between\">\n                <div class=\"mb-1\">\n                  <span class=\"small text-disabled\">\n                   Credits consumed:  \n                  </span>\n                  <span class=\"fw-semibold\">50%</span>\n                </div>\n              </div>\n              <CProgress\n                thin\n                color=\"success\"\n                value=50\n              />\n            </CCol> -->\n          </CRow>\n        </CCardHeader>\n\n        <CCardBody>\n\n          <div class=\"row clearfix\">\n            <div class=\"card chat-app\">\n              <div id=\"plist\" class=\"people-list\">\n\n              </div>\n            </div>\n          </div>\n\n          <div id=\"chatContainer\" class=\"chat divFixedHeightContent\">\n          <div class=\"chat-history\">\n            <ul class=\"m-b-0\" v-for=\"chat in this.chatHistory\">\n                <li class=\"mb-5 mt-3\" v-if=\"chat.ask !== undefined\">\n                  <div class=\"message-data gap-2 d-md-flex justify-content-md-end\">\n                    <CAvatar size=\"md\" :src=\"this.user_avatar\" status=\"success\" />\n                  </div>\n                  <div class=\"customhtml message other-message gap-2 d-md-flex justify-content-md-end text-small\" v-html=\"this.md.render(chat.ask.text)\">\n                  </div>                    \n                </li>                      \n                <li class=\"mb-5 mt-3\" v-if=\"chat.response !== undefined\">\n                    <div class=\"message-data \">\n                        <CAvatar size=\"md\" :src=\"this.app_avatar\" status=\"success\" />\n                    </div>\n                    <div class=\"customhtml message my-message\" v-html=\"this.md.render(chat.response.text)\"></div>\n                </li>\n            </ul>\n          </div>\n          </div>\n\n        </CCardBody>\n\n        <CCardFooter>\n\n          <CRow class=\"mt-2 mb-2\" v-if=\"this.showTyping\">\n            <CCol :md=\"12\">\n              <CSpinner color=\"primary\" size=\"sm\" variant=\"grow\" />\n              <CSpinner color=\"secondary\" size=\"sm\" variant=\"grow\" />\n              <CSpinner color=\"success\" size=\"sm\" variant=\"grow\" />\n              Saras is responding..\n            </CCol>\n          </CRow>\n\n          <CForm\n            class=\"row needs-validation\"\n            novalidate\n            :validated=\"validatedCustom01\"\n            @submit=\"checkFormValidity\"\n            @submit.prevent=\";\"\n          >\n\n            <CInputGroup class=\"mb-3\">\n              <CFormTextarea class=\"chatInputAreax\" placeholder=\"type your query here..\"\n                id=\"userMessageField\"\n                aria-describedby=\"userMessageSend\"\n                v-model=\"this.userMessage\"\n                rows=1\n                required />\n              <!-- <CFormInput\n                placeholder=\"type your query here..\"\n                aria-describedby=\"userMessageSend\"\n                v-model=\"this.userMessage\"\n                required\n              /> -->\n              <CButton\n                id=\"userMessageSend\"\n                type=\"submit\"\n                color=\"primary\"\n                style=\"color: white\"\n              >\n                Send\n              </CButton>\n              <CFormFeedback invalid>\n                Enter your query..\n              </CFormFeedback>\n            </CInputGroup>\n\n          </CForm>\n        </CCardFooter>\n\n\n      </CCard>\n\n    </CCol>\n  </CRow>\n\n</template>\n<!-- https://www.bootdey.com/snippets/view/chat-app -->\n\n<script>\n\nimport axios from \"axios\"\nimport vueCookies from 'vue-cookies'\nimport markdownit from 'markdown-it'\nimport {validateSession} from '@/store/session'\n\nimport avatar1 from '@/assets/images/avatars/1.jpg'\nimport avatar2 from '@/assets/images/avatars/2.jpg'\n\nexport default {\n  name: \"SARAS\",\n  \n  data: () => {\n    return {\n      // headerToken\n      APIHOST: process.env.VUE_APP_APIS_HOST === undefined ? '' : process.env.VUE_APP_APIS_HOST,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json; charset=utf-8',\n        'Authorization': vueCookies.get('accessToken')\n      },\n\n      //Validation\n      validatedCustom01: null,\n\n      // Markdown\n      md: markdownit(),\n\n      // Avatars\n      app_avatar: avatar1,\n      user_avatar: avatar2,\n\n      // Data\n      userDetails: vueCookies.get('userDetails'),\n      chatHistory: [],\n      userMessage: null,\n\n      //Typing\n      showTyping: false,\n      responseChatId: null,\n\n    }\n  },\n  methods: {\n\n    checkFormValidity(event) {\n\n      const form = event.currentTarget\n      if (form.checkValidity() === false) {\n        event.preventDefault()\n        event.stopPropagation()\n      } else {\n        this.sendChat()\n      }\n      this.validatedCustom01 = true\n    },\n\n    getRecentChats() {\n      let chatDetailsUrl = this.APIHOST + '/mainapp/getChatDump?simplified=1'\n      let config = {\n        method: 'get',\n        maxBodyLength: Infinity,\n        url: chatDetailsUrl,\n        headers: this.headers,\n      };\n\n      axios.request(config)\n      .then((response) => {\n        console.log(response)\n\n        this.chatHistory = []\n\n        for (let i = 0; i < response.data.chats.length; i++) {\n          \n          let chat = response.data.chats[i]\n\n          let dt_userTime = new Date(chat.userTime)          \n          let dth_userTime = dt_userTime.getFullYear() + \"/\" + dt_userTime.getMonth() + \"/\" + dt_userTime.getDate() + \" - \" + dt_userTime.getHours() + \":\" + dt_userTime.getMinutes()\n\n          let dt_botTime = new Date(chat.botTime)  \n          let dth_botTime = dt_botTime.getFullYear() + \"/\" + dt_botTime.getMonth() + \"/\" + dt_botTime.getDate() + \" - \" + dt_botTime.getHours() + \":\" + dt_botTime.getMinutes()\n\n          let chatFormatted = {\n            \"ask\": {\n              \"text\": atob(chat.user),\n              \"time\": dth_userTime\n            },\n            \"response\": {\n              \"text\": atob(chat.bot),\n              \"time\": dth_botTime\n            }\n          }\n          this.chatHistory.push(chatFormatted)\n        }\n        // console.log(this.chatHistory)\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    },\n\n    sendChat() {\n      // alert(this.userMessage)\n\n      let message = this.userMessage\n      document.getElementById(\"userMessageField\").disabled = true\n      document.getElementById(\"userMessageSend\").disabled = true\n\n      \n      let data = JSON.stringify({\n        \"message\": message,\n        \"datetime\": new Date().toISOString().slice(0,-5)\n      })\n\n      let config = {\n        method: 'post',\n        maxBodyLength: Infinity,\n        url: this.APIHOST + '/mainapp/webBotIncomingMessageFromUser',\n        headers: this.headers,\n        data : data\n      }\n\n      axios.request(config)\n        .then((response) => {\n\n          // enable receiving\n          this.showTyping = true\n          this.userMessage = null\n          this.chatHistory.push({\n            \"ask\": {\n              \"text\": message,\n            },\n          })\n\n          // console.log(JSON.stringify(response.data));\n          // alert(JSON.stringify(response.data))\n          this.responseChatId = response.data.chat.chatId\n          // this.responseChatId = \"fc66c0ca-4316-4eb9-9703-35c46b17bc49\"\n          this.pollChatResponse()\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    },\n\n    getChatResponse() {\n\n      if (this.responseChatId != null) {\n        let config = {\n          method: 'get',\n          maxBodyLength: Infinity,\n          url: this.APIHOST + '/mainapp/getChatSingle?chatId=' + this.responseChatId,\n          headers: this.headers,\n        }\n\n        axios.request(config)\n        .then((response) => {\n          // console.log(JSON.stringify(response.data));\n\n          console.log(response.data.chat.messages.output.response.text)\n\n          if (response.data.chat.messages.output.response.text !== undefined) {\n            let responseMessage = atob(response.data.chat.messages.output.response.text)\n            this.showTyping = false\n            this.chatHistory.push({\n              \"response\": {\n                \"text\": responseMessage,\n              },\n            })\n            this.responseChatId = null\n            document.getElementById(\"userMessageField\").disabled = false\n            document.getElementById(\"userMessageSend\").disabled = false\n          }\n          \n        })\n        .catch((error) => {\n          console.log(error);\n        });\n\n      }\n\n    },\n\n    pollChatResponse() {\n      console.log(\"Calling Notification service regularly...\")\n      this.timer = setInterval(() => {\n        this.getChatResponse()\n      }, 5000)\n    },\n\n  }, //end of methods\n\n  beforeCreate() {\n    validateSession(this.$router)\n  }, // end beforeCreate\n\n  created() {\n    this.getRecentChats()\n  }, // end created\n\n}\n\n</script>\n\n<style scoped>\n\n  .chatInputArea {\n    height: auto;\n  }\n\n  .divFixedHeightContent {\n    overflow: auto;\n    min-height: 70vh;\n    max-height: 70vh;\n    display: flex;\n    flex-direction: column-reverse;\n/*    padding: 10px;*/\n  }\n\n  .divFixedHeightContent2 {\n    height: 900px;\n    overflow: scroll;\n/*    padding: 10px;*/\n  }\n\n  .customhtml h1 {\n    font-size: 1em;\n  }\n\n  .customhtml h2 {\n    font-size: .75em;\n  }\n\n  .customhtml h3 {\n    font-size: 0.6em;\n  }\n\n  .customhtml h4 {\n    font-size: 0.5em;\n  }\n\n  .customhtml h5 {\n    font-size: .4em;\n  }\n\n  .customhtml h6 {\n    font-size: .3em;\n  }\n\n  .card {\n      background: #fff;\n      transition: .5s;\n      border: 0;\n      margin-bottom: 30px;\n      border-radius: .55rem;\n      position: relative;\n      width: 100%;\n      box-shadow: 0 1px 2px 0 rgb(0 0 0 / 10%);\n  }\n  .chat-app .people-list {\n      width: 280px;\n      position: absolute;\n      left: 0;\n      top: 0;\n      padding: 20px;\n      z-index: 7\n  }\n\n  .chat-app .chat {\n      margin-left: 280px;\n      border-left: 1px solid #eaeaea\n  }\n\n  .people-list {\n      -moz-transition: .5s;\n      -o-transition: .5s;\n      -webkit-transition: .5s;\n      transition: .5s\n  }\n\n  .people-list .chat-list li {\n      padding: 10px 15px;\n      list-style: none;\n      border-radius: 3px\n  }\n\n  .people-list .chat-list li:hover {\n      background: #efefef;\n      cursor: pointer\n  }\n\n  .people-list .chat-list li.active {\n      background: #efefef\n  }\n\n  .people-list .chat-list li .name {\n      font-size: 15px\n  }\n\n  .people-list .chat-list img {\n      width: 45px;\n      border-radius: 50%\n  }\n\n  .people-list img {\n      float: left;\n      border-radius: 50%\n  }\n\n  .people-list .about {\n      float: left;\n      padding-left: 8px\n  }\n\n  .people-list .status {\n      color: #999;\n      font-size: 13px\n  }\n\n  .chat .chat-header {\n      padding: 15px 20px;\n      border-bottom: 2px solid #f4f7f6\n  }\n\n  .chat .chat-header img {\n      float: left;\n      border-radius: 40px;\n      width: 40px\n  }\n\n  .chat .chat-header .chat-about {\n      float: left;\n      padding-left: 10px\n  }\n\n  .chat .chat-history {\n      padding: 20px;\n      border-bottom: 2px solid #fff\n  }\n\n  .chat .chat-history ul {\n      padding: 0\n  }\n\n  .chat .chat-history ul li {\n      list-style: none;\n      margin-bottom: 30px\n  }\n\n  .chat .chat-history ul li:last-child {\n      margin-bottom: 0px\n  }\n\n  .chat .chat-history .message-data {\n      margin-bottom: 15px\n  }\n\n  .chat .chat-history .message-data img {\n      border-radius: 40px;\n      width: 40px\n  }\n\n  .chat .chat-history .message-data-time {\n      color: #434651;\n      padding-left: 6px\n  }\n\n  .chat .chat-history .message {\n      color: #444;\n      padding: 12px 12px;\n      line-height: 22px;\n      font-size: 15px;\n      border-radius: 7px;\n      display: inline-block;\n      position: relative\n  }\n\n  .chat .chat-history .message:after {\n      bottom: 100%;\n      left: 7%;\n      border: solid transparent;\n      content: \" \";\n      height: 0;\n      width: 0;\n      position: absolute;\n      pointer-events: none;\n      border-bottom-color: #fff;\n      border-width: 10px;\n      margin-left: -10px\n  }\n\n  .chat .chat-history .my-message {\n      background: #efefef;\n      max-width: 85%;\n  }\n\n  .chat .chat-history .my-message:after {\n      bottom: 100%;\n      left: 30px;\n      border: solid transparent;\n      content: \" \";\n      height: 0;\n      width: 0;\n      position: absolute;\n      pointer-events: none;\n      border-bottom-color: #efefef;\n      border-width: 10px;\n      margin-left: -10px;\n  }\n\n  .chat .chat-history .other-message {\n      max-width: 85%;\n      background: #e8f1f3;\n      float: right;\n      text-align: right\n  }\n\n  .chat .chat-history .other-message:after {\n      border-bottom-color: #e8f1f3;\n      left: 95%;\n  }\n\n  .chat .chat-message {\n      padding: 20px\n  }\n\n  .online,\n  .offline,\n  .me {\n      margin-right: 2px;\n      font-size: 8px;\n      vertical-align: middle\n  }\n\n  .online {\n      color: #86c541\n  }\n\n  .offline {\n      color: #e47297\n  }\n\n  .me {\n      color: #1d8ecd\n  }\n\n  .float-right {\n      float: right\n  }\n\n  .clearfix:after {\n      visibility: hidden;\n      display: block;\n      font-size: 0;\n      content: \" \";\n      clear: both;\n      height: 0\n  }\n\n  @media only screen and (max-width: 767px) {\n      .chat-app .people-list {\n          height: 465px;\n          width: 100%;\n          overflow-x: auto;\n          background: #fff;\n          left: -400px;\n          display: none\n      }\n      .chat-app .people-list.open {\n          left: 0\n      }\n      .chat-app .chat {\n          margin: 0\n      }\n      .chat-app .chat .chat-header {\n          border-radius: 0.55rem 0.55rem 0 0\n      }\n      .chat-app .chat-history {\n          height: 300px;\n          overflow-x: auto\n      }\n  }\n\n  @media only screen and (min-width: 768px) and (max-width: 992px) {\n      .chat-app .chat-list {\n          height: 650px;\n          overflow-x: auto\n      }\n      .chat-app .chat-history {\n          height: 600px;\n          overflow-x: auto\n      }\n  }\n\n  @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: 1) {\n      .chat-app .chat-list {\n          height: 480px;\n          overflow-x: auto\n      }\n      .chat-app .chat-history {\n          height: calc(100vh - 350px);\n          overflow-x: auto\n      }\n  }\n\n\n\n</style>\n","/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n","const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n","export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n","export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/","export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","export default /[\\0-\\x1F\\x7F-\\x9F]/","export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/",null,null,null,null,null,null,null,"// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n","// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n","// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n","// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n","// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n","// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n","export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n","export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n","// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n","// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n","// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n","// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n","// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n","import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n","// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n","// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n","// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n","// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n","// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n","// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n","// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n","// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n","// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n","// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n","// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n","// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n","// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n","// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n","import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n","import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n","import { render } from \"./Main.vue?vue&type=template&id=97c8cad8&scoped=true\"\nimport script from \"./Main.vue?vue&type=script&lang=js\"\nexport * from \"./Main.vue?vue&type=script&lang=js\"\n\nimport \"./Main.vue?vue&type=style&index=0&id=97c8cad8&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/cprakashagr/Workspace/GlobetrotterFinance/kbBot4Laws/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-97c8cad8\"]])\n\nexport default __exports__"],"names":["_createElementVNode","class","id","_createBlock","_component_CRow","_createVNode","_component_CCol","md","_component_CCard","_component_CCardHeader","sm","_component_CTable","borderless","small","_component_CTableBody","_component_CTableRow","_component_CTableDataCell","style","_component_CAvatar","size","src","app_avatar","status","_hoisted_1","_hoisted_2","_component_CCardBody","_hoisted_3","_hoisted_4","_hoisted_5","_createElementBlock","_Fragment","chatHistory","chat","_hoisted_6","undefined","ask","_hoisted_7","_hoisted_8","user_avatar","innerHTML","render","text","response","_hoisted_10","_hoisted_11","_component_CCardFooter","showTyping","_component_CSpinner","color","variant","_component_CForm","novalidate","validated","_ctx","onSubmit","$options","_component_CInputGroup","_component_CFormTextarea","placeholder","userMessage","rows","required","_component_CButton","type","_component_CFormFeedback","invalid","decodeCache","getDecodeCache","exclude","cache","i","ch","String","fromCharCode","push","length","charCodeAt","toString","toUpperCase","slice","decode","string","defaultChars","replace","seq","result","l","b1","parseInt","b2","chr","b3","b4","componentChars","encodeCache","getEncodeCache","test","encode","keepEscaped","code","nextCode","encodeURIComponent","format","url","protocol","slashes","auth","hostname","indexOf","port","pathname","search","hash","Url","this","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","http","https","ftp","gopher","file","urlParse","slashesDenoteHost","u","parse","prototype","lowerProto","hec","rest","trim","split","simplePath","exec","proto","toLowerCase","substr","match","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","Uint16Array","map","c","decodeMap","Map","fromCodePoint","codePoint","output","replaceCodePoint","get","CharCodes","TO_LOWER_BIT","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isAsciiAlphaNumeric","UPPER_Z","LOWER_Z","isEntityInAttributeInvalidEnd","EQUALS","EntityDecoder","constructor","decodeTree","emitCodePoint","errors","EntityStart","Strict","startEntity","decodeMode","state","treeIndex","excess","consumed","write","str","offset","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","start","end","base","digitCount","Math","pow","startIdx","char","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","lastIndex","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","value","lo","hi","mid","midVal","htmlDecoder","htmlDecodeTree","xmlDecodeTree","decodeHTML","mode","Legacy","restoreDiff","arr","v","n","o","xmlCodeMap","codePointAt","getEscaper","regex","data","lastIdx","index","substring","EntityLevel","EncodingMode","_class","obj","Object","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","arguments","forEach","source","TypeError","keys","arrayReplaceAt","pos","newElements","isValidEntityCode","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","name","decoded","unescapeMd","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","isPunctChar","ucmicro","isMdAsciiPunct","normalizeReference","lib","mdurl","parseLinkLabel","disableNested","level","found","marker","prevPos","posMax","oldPos","inline","skipToken","labelEnd","parseLinkDestination","ok","parseLinkTitle","prev_state","can_continue","default_rules","Renderer","rules","code_inline","tokens","idx","options","env","slf","token","renderAttrs","content","code_block","fence","info","highlighted","langName","langAttrs","highlight","attrIndex","tmpAttrs","attrs","langPrefix","tmpToken","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","html_block","html_inline","hidden","block","nesting","tag","needLf","nextToken","renderInline","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","Token","markup","meta","attrPush","attrData","attrSet","attrGet","attrJoin","StateCore","inlineMode","NEWLINES_RE","NULL_RE","normalize","tok","isLinkOpen","isLinkClose","linkify","blockTokens","pretest","htmlLinkLevel","currentToken","links","nodes","lastPos","ln","fullUrl","normalizeLink","validateLink","urlText","schema","normalizeLinkText","token_o","token_t","token_c","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","stack","thisLevel","OUTER","t","canOpen","canClose","isSingle","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","item","single","openQuote","closeQuote","quotes","smartquotes","text_join","curr","last","_rules","r_normalize","r_block","r_inline","r_linkify","r_replacements","r_smartquotes","r_text_join","Core","ruler","process","State","StateBlock","bMarks","eMarks","tShift","sCount","bsCount","blkIndent","line","lineMax","tight","ddIndent","listIndent","parentType","s","indent","indent_found","isEmpty","skipEmptyLines","from","skipSpaces","skipSpacesBack","min","skipChars","skipCharsBack","getLines","begin","keepLastLF","queue","lineIndent","lineStart","first","MAX_AUTOCOMPLETED_CELLS","getLine","escapedSplit","isEscaped","table","startLine","endLine","silent","nextLine","firstCh","secondCh","lineText","columns","aligns","shift","pop","columnCount","oldParentType","terminatorRules","token_to","tableLines","token_tho","token_htro","token_ho","token_il","tbodyLines","autocompletedCells","terminate","token_tbo","token_tro","token_tdo","mem","params","haveEndMarker","blockquote","oldLineMax","oldBMarks","oldBSCount","oldSCount","oldTShift","lastLineEmpty","isOutdented","spaceAfterMarker","adjustTab","initial","oldIndent","lines","tokenize","hr","cnt","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","isOrdered","markerValue","posAfterMarker","isTerminatingParagraph","Number","markerCharCode","listTokIdx","listLines","prevEmptyEnd","contentStart","indentAfterMarker","itemLines","oldTight","oldListIndent","reference","_endLine","getNextLine","isContinuation","lineContent","destRes","helpers","href","destEndPos","destEndLineNo","title","titleRes","label","references","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","block_names","html","heading","tmp","token_i","lheading","paragraph","r_table","r_code","r_fence","r_blockquote","r_hr","r_list","r_reference","r_html_block","r_heading","r_lheading","r_paragraph","ParserBlock","maxNesting","hasEmptyLines","prevLine","outTokens","StateInline","tokens_meta","pending","pendingLevel","delimiters","_prev_delimiters","backticks","backticksScanned","linkLevel","pushPending","token_meta","scanDelims","canSplitWord","count","left_flanking","right_flanking","can_open","can_close","isTerminatorChar","SCHEME_RE","link","matchAtStart","newline","pmax","ws","ESCAPED","escape","ch1","escapedStr","ch2","origStr","backtick","openerLength","matchStart","matchEnd","closerLength","strikethrough_tokenize","scanned","open","close","postProcess","loneMarkers","startDelim","endDelim","strikethrough_postProcess","emphasis_tokenize","isStrong","emphasis_post_process","res","ref","parseReference","labelStart","EMAIL_RE","AUTOLINK_RE","autolink","isLetter","lc","DIGITAL_RE","NAMED_RE","processDelimiters","openersBottom","headerIdx","lastTokenIdx","jumps","closerIdx","closer","minOpenerIdx","openerIdx","newMinOpenerIdx","opener","isOddMatch","lastJump","link_pairs","fragments_join","r_text","r_newline","r_escape","r_backticks","r_strikethrough","r_emphasis","r_link","r_image","r_autolink","r_html_inline","r_entity","_rules2","r_balance_pairs","r_fragments_join","ParserInline","ruler2","opts","re","src_Any","Any","src_Cc","Cc","src_Z","Z","src_P","P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isObject","isRegExp","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","defaultSchemas","validate","tail","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","compile","reFactory","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","alias","slist","filter","schema_test","schema_search","schema_at_start","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","add","definition","set","m","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","sort","el","reverse","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","callback","mapDomain","domain","parts","labels","encoded","ucs2decode","counter","extra","ucs2encode","codePoints","basicToDigit","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","toUnicode","toASCII","punycode","components","core","rules2","config","default","cfg_default","zero","cfg_zero","commonmark","cfg_commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","er","MarkdownIt","presetName","utils","ParserCore","renderer","configure","presets","missed","use","plugin","args","apply","parseInline","APIHOST","headers","vueCookies","validatedCustom01","markdownit","avatar1","avatar2","userDetails","responseChatId","methods","checkFormValidity","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","sendChat","getRecentChats","chatDetailsUrl","method","maxBodyLength","Infinity","axios","then","console","log","chats","dt_userTime","Date","userTime","dth_userTime","getFullYear","getMonth","getDate","getHours","getMinutes","dt_botTime","botTime","dth_botTime","chatFormatted","atob","user","bot","catch","message","document","getElementById","disabled","JSON","stringify","toISOString","chatId","pollChatResponse","getChatResponse","messages","responseMessage","timer","setInterval","beforeCreate","validateSession","$router","created","__exports__"],"sourceRoot":""}